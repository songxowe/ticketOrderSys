package com.ticketOrderSys.dao;

import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.orm.hibernate4.HibernateCallback;
import org.springframework.orm.hibernate4.support.HibernateDaoSupport;

import com.ticketOrderSys.pojo.FlightOrder;
import com.ticketOrderSys.utils.Pager;

public class FlightOrderDaoImpl extends HibernateDaoSupport implements FlightOrderDao {

	@Override
	public void add(FlightOrder flightOrder) {
		this.getHibernateTemplate().save(flightOrder);
	}

	@Override
	public void modify(FlightOrder flightOrder) {
		this.getHibernateTemplate().update(flightOrder);
	}

	@Override
	public void remove(FlightOrder flightOrder) {
		this.getHibernateTemplate().delete(flightOrder);
	}

	@Override
	public FlightOrder find(Integer oid) {
		return this.getHibernateTemplate().get(FlightOrder.class, oid);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<FlightOrder> find() {
		return (List<FlightOrder>) this.getHibernateTemplate().find("from FlightOrder", new Object[] {});
	}

	@Override
	public Pager<FlightOrder> find(final Integer page, final Integer rows, String sort, String order,
			final String orderNo, final Integer userid) {
		String temphql = "from FlightOrder where 1=1 ";

		if (StringUtils.isNotBlank(orderNo)) {
			temphql += "and orderNo =:orderNo ";
		}

		if (null != userid && userid > 0) {
			temphql += "and userid =:userid ";
		}

		// 排序
		temphql += " order by " + sort + " " + order;
		final String hql = temphql;

		return this.getHibernateTemplate().execute(new HibernateCallback<Pager<FlightOrder>>() {
			@SuppressWarnings("unchecked")
			@Override
			public Pager<FlightOrder> doInHibernate(Session session) throws HibernateException {
				Query query = session.createQuery(hql);
				if (StringUtils.isNotBlank(orderNo)) {
					query.setString("orderNo", orderNo);
				}

				if (null != userid && userid > 0) {
					query.setInteger("userid", userid);
				}
				Pager<FlightOrder> pager = new Pager<FlightOrder>();
				pager.setTotal(query.list().size());
				// 用于分页
				query.setFirstResult((page - 1) * rows);
				query.setMaxResults(rows);
				pager.setRows(query.list());
				return pager;

			}
		});
	}

}
