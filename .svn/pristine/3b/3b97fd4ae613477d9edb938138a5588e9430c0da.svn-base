package com.ticketOrderSys.dao;

import java.util.Date;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.orm.hibernate4.HibernateCallback;
import org.springframework.orm.hibernate4.support.HibernateDaoSupport;

import com.ticketOrderSys.pojo.Flight;
import com.ticketOrderSys.utils.Pager;

public class FlightDaoImpl extends HibernateDaoSupport implements FlightDao {

	@Override
	public void add(Flight flight) {
		this.getHibernateTemplate().save(flight);
	}

	@Override
	public void modify(Flight flight) {
		this.getHibernateTemplate().update(flight);
	}

	@Override
	public void remove(Flight flight) {
		this.getHibernateTemplate().delete(flight);
	}

	@Override
	public Flight find(Integer fid) {
		return this.getHibernateTemplate().get(Flight.class, fid);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Flight> find() {
		return (List<Flight>) this.getHibernateTemplate().find("from Flight", new Object[] {});
	}

	@Override
	public Pager<Flight> find(final Integer page, final Integer rows, String sort, String order, final String fromCity,
			final String toCity, final String name, final Date fromTime) {
		String temphql = "from Flight where 1=1 ";
		if (StringUtils.isNotBlank(name)) {
			temphql += "and name like:name ";
		}
		final Date toTime = new Date(fromTime.getTime() + 86399);
		if (fromTime != null) {
			temphql += "and fromTime>:fromTime and fromTime<:toTime ";
		}

		if (StringUtils.isNotBlank(fromCity)) {
			temphql += "and fromCity like:fromCity ";
		}

		if (StringUtils.isNotBlank(toCity)) {
			temphql += "and toCity like:toCity ";
		}
		// 排序
		temphql += " order by " + sort + " " + order;
		final String hql = temphql;

		return this.getHibernateTemplate().execute(new HibernateCallback<Pager<Flight>>() {
			@SuppressWarnings("unchecked")
			@Override
			public Pager<Flight> doInHibernate(Session session) throws HibernateException {
				Query query = session.createQuery(hql);
				if (StringUtils.isNotBlank(name)) {
					query.setString("name", "%" + name + "%");
				}

				if (fromTime != null) {
					query.setString("fromTime", "%" + fromTime + "%");
					query.setString("toTime", "%" + toTime + "%");
				}

				if (StringUtils.isNotBlank(fromCity)) {
					query.setString("fromCity", "%" + fromCity + "%");
				}

				if (StringUtils.isNotBlank(toCity)) {
					query.setString("toCity", "%" + toCity + "%");
				}
				Pager<Flight> pager = new Pager<Flight>();
				pager.setTotal(query.list().size());
				// 用于分页
				query.setFirstResult((page - 1) * rows);
				query.setMaxResults(rows);
				pager.setRows(query.list());
				return pager;

			}
		});
	}

}
